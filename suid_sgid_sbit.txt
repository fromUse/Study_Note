

##SUID && SGID && SBIT
# r :4 == 2^2
# w :2 == 2^1
# x :1 == 2^0

##SUID [ 配合 chmod 命令使用 chmod 4755 file_name ]
#--- --- ---
#4 7 5 5 [ 这里的4就是特殊权限位 ] [ 4是文件所有者特殊权限位 ] [ 关键字s ]

## suid 特殊权限位 [ 主要控制 2进制可执行文件 并且是有 x 权限的文件 ]
# 例如 passwd 命令 -rwsr-xr-x. 1 root root 25980 2月  22 2012 /usr/bin/passwd [ 文件所有者权限有个 s ]
# 然而修改密码是修改 /etc/shadow 这个文件 文件权限是 ----------. 1 root root 1137 11月 15 22:31 /etc/shadow
		# 即只有root可以修改这个文件，普通用户不行，所以 suid 就是起到作用了
## suid的作用
# 当普通用户执行某个带有s特殊权限的命令时，普通用户会变身成这个文件的所有者，命令完成后又会变回普通用户


##SGID [ 配合 chmod 命令使用 chmod 2755 file_name ]
# 2755 [ 这里的2就是特殊权限 ] [ 2是文件所属组特殊权限位 ] [ 关键字s ]
## SGID主要要于目录操作 [ 生效作用目录下的文件 ]
# 与SUID差不多，特点多了可以给 目录设置特殊权限
# 当在此目录下的操作 创建文件等，会以这个目录的所属组的身份去操作
# 创建的文件的所有者就是用户本身，但是所属组就会是同一个所属组


##SBIT [ 配合 chmod命 令使用 chmod 1755 file_name ]
## SBIT主要用于目录操作 [ 生效作用于目录下的文件 ]
# 1775 [ 这里的1就是特殊权限位 ] [ 1是文件其它用户的特殊权限 ] [ 关键字t ]
# 特点能创建自己的文件，但是只能删除自己的文件 <root除外>，其他人也删除不了你的文件
# 只能删除自己的文件
# 只能修改自己的文件
# 只能移动自己的文件


##ACL [ 主要作用于其他用户的特例用户 ] [ 关键字 + ]
# #设置acl权限  setfacl [ option -m / -x ] u:[ user_name]:rwx [ file_name ]
# setfacl -m m:rwx [ file_name ]  设置 mask:rwx 默认mask为rwx权限
# 最终权限由mask决定
# option [ 选项 ]
  # -m 修改当前acl权限配置文件
  # -M
  # -x
  # -X
  # -k
  # -n
  # -d
  # -R
  # -L
  # -P
	# -v 显示命令版本
	# -h 显示命令帮助
#如系统自带的目录tmp
##查看acl权限情况
# getfacl [ file_name ]